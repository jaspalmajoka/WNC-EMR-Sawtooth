swagger: '2.0'
info:
  description: Open EMR Blockchain API Endpoint to store and retreive data from State
  version: 1.0.0
  title: Open EMR Blockchain API
  # put the contact info for your development or API team
  contact:
    email: johnjayasingh.s@gmail.com

# tags are used for organizing operations
tags:
- name: patient
  description: Patient related api
- name: document
  description: Document related api
- name: hospital
  description: Hospital related api
paths:
  /patient:
    get:
      tags: 
      - patient
      summary: Create Patient to state
      description: Add patient entry to state
      parameters:
      - name: "id"
        in: "query"
        description: "Patient ID should be passed"
        type: "string"
      responses:
        200:
          description: Patient Details Retreived
        400:
          description: invalid input, query params invalid
    post:
      tags:
      - patient
      summary: Create Patient to state
      description: Add patient entry to state
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: patientItem
        description: Patient item to add
        schema:
          $ref: '#/definitions/CreatePatient'
      responses:
        201:
          description: Patient ID created
        400:
          description: invalid input, object invalid
  /document/{id}:
    delete:
      tags:
      - document
      summary: Delete Document from state
      description: Delete Document entry from blockchain state
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: "ID of that Document that need to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: Documetn created and attached to patient
        400:
          description: invalid input, object invalid
  /document:
    post:
      tags:
      - document
      summary: Adds document 
      description: Adds document record
      produces:
      - application/json
      parameters:
      - in: body
        name: patientData
        description: Patient Data to be updated
        schema:
          $ref: '#/definitions/CreateDocument'
      responses:
        201:
          description: Patient ID created
        400:
          description: invalid input, object invalid
    get:
      tags:
      - document
      summary: Get Document from state
      description: Get Document entry from blockchain state
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        description: "ID of that Document that need to be retreived from state"
        required: false
        type: "string"
      responses:
        201:
          description: Document retreived 
        400:
          description: invalid input, object invalid
  /hospital:
    post:
      tags:
      - hospital
      summary: Adds hospital 
      description: Adds hospital record
      produces:
      - application/json
      parameters:
      - in: body
        name: hospitalData
        description: Hospital Data to be updated
        schema:
          $ref: '#/definitions/CreateHospital'
      responses:
        201:
          description: Hospital ID created
        400:
          description: invalid input, object invalid
    get:
      tags:
      - hospital
      summary: Get Hospital data from state
      description: Get Hospital entry from blockchain state
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        description: "ID of that Hospital that need to be retreived from state"
        required: false
        type: "string"
      responses:
        201:
          description: Hospital data retreived 
        400:
          description: invalid input, object invalid
  /hospital/{id}:
    delete:
      tags:
      - hospital
      summary: Delete Hospital from state
      description: Delete Hospital entry from blockchain state
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: "ID of that Hospital that need to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: Hospital deleted
        400:
          description: invalid input, object invalid
  /patient/{id}:
    delete:
      tags:
      - patient
      summary: Delete Patient from state
      description: Delete Patient entry from blockchain state
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: "ID of that patient that need to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: Patient ID created
        400:
          description: invalid input, object invalid
    put:
      tags:
      - patient
      summary: Updates patient records
      description: Update patient record
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: "ID of that patient that need to be updated"
        required: true
        type: "string"
      - in: body
        name: patientData
        description: Patient Data to be updated
        schema:
          $ref: '#/definitions/CreatePatient'
      responses:
        201:
          description: Patient ID created
        400:
          description: invalid input, object invalid
definitions:
  CreateDocument:
    type: object
    properties:
      patientId:
        type: string
        example: P1
      documentUrl:
        type: string
        example: http://unec.edu.az/application/uploads/2014/12/pdf-sample.pdf
  CreatePatient:
    type: object
    properties:
      id:
        type: string
        example: P1
      document:
        type: array
        items: 
          type: string
          example: http://unec.edu.az/application/uploads/2014/12/pdf-sample.pdf
  CreateHospital:
    type: object
    properties:
      # id:
      #   type: string
      #   example: H1
      info:
        type: string
        example: http://unec.edu.az/application/uploads/2014/12/pdf-sample.pdf
# Added by API Auto Mocking Plugin
host: 18.136.137.49:3000
basePath: /api
schemes:
 - http